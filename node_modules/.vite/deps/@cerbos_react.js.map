{
  "version": 3,
  "sources": ["../../dequal/dist/index.mjs", "../../use-deep-compare-effect/dist/use-deep-compare-effect.esm.js", "../../@cerbos/react/src/cerbos-provider.tsx", "../../@cerbos/react/src/use-cerbos.ts", "../../@cerbos/react/src/use-cerbos-request.ts", "../../@cerbos/react/src/index.ts"],
  "sourcesContent": ["var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n", "import * as React from 'react';\nimport { dequal } from 'dequal';\n\nfunction checkDeps(deps) {\n  if (!deps || !deps.length) {\n    throw new Error('useDeepCompareEffect should not be used with no dependencies. Use React.useEffect instead.');\n  }\n\n  if (deps.every(isPrimitive)) {\n    throw new Error('useDeepCompareEffect should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n  }\n}\n\nfunction isPrimitive(val) {\n  return val == null || /^[sbn]/.test(typeof val);\n}\n/**\n * @param value the value to be memoized (usually a dependency list)\n * @returns a momoized version of the value as long as it remains deeply equal\n */\n\n\nfunction useDeepCompareMemoize(value) {\n  var ref = React.useRef(value);\n  var signalRef = React.useRef(0);\n\n  if (!dequal(value, ref.current)) {\n    ref.current = value;\n    signalRef.current += 1;\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return React.useMemo(function () {\n    return ref.current;\n  }, [signalRef.current]);\n}\n\nfunction useDeepCompareEffect(callback, dependencies) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkDeps(dependencies);\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return React.useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nfunction useDeepCompareEffectNoCheck(callback, dependencies) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useEffect(callback, useDeepCompareMemoize(dependencies));\n}\n\nexport { useDeepCompareEffect as default, useDeepCompareEffectNoCheck, useDeepCompareMemoize };\n", null, "import type { ClientWithPrincipal } from \"@cerbos/core\";\nimport { useContext } from \"react\";\n\nimport {\n  CerbosContext,\n  CerbosProvider, // eslint-disable-line @typescript-eslint/no-unused-vars -- used for docs link\n} from \"./cerbos-provider\";\nimport type {\n  AsyncResult, // eslint-disable-line @typescript-eslint/no-unused-vars -- used for docs link\n} from \"./use-cerbos-request\";\nimport {\n  useCheckResource, // eslint-disable-line @typescript-eslint/no-unused-vars -- used for docs link\n  useCheckResources, // eslint-disable-line @typescript-eslint/no-unused-vars -- used for docs link\n  useIsAllowed, // eslint-disable-line @typescript-eslint/no-unused-vars -- used for docs links\n} from \"./use-cerbos-request\";\n\n/**\n * A hook to access the Cerbos client passed down by the {@link CerbosProvider}.\n *\n * @remarks\n * The client's methods are asynchronous, so depending on your use case it may be easier to\n * use one of the higher-level hooks ({@link useCheckResource}, {@link useCheckResources}, or\n * {@link useIsAllowed}), which convert the resulting promises into {@link AsyncResult}s.\n *\n *\n * @example\n * ```typescript\n * import { useCerbos } from \"@cerbos/react\";\n *\n * function SomeComponent() {\n *   const cerbos = useCerbos();\n *\n *   const handleClick = async () => {\n *     const decision = await cerbos.checkResource({\n *       resource: {\n *         kind: \"document\",\n *         id: \"1\",\n *         attr: { owner: \"user@example.com\" },\n *       },\n *       actions: [\"view\", \"edit\"],\n *     });\n *\n *     if (decision.allAllowed()) {\n *       // do something\n *     } else if (decision.allowedActions().includes(\"view\")) {\n *       // do something else\n *     }\n *     ...\n *   };\n *\n *   return <button onClick={handleClick}>...</button>;\n * }\n * ```\n * @public\n */\nexport function useCerbos(): ClientWithPrincipal {\n  const value = useContext(CerbosContext);\n\n  if (!value) {\n    throw new Error(\"CerbosProvider not found\");\n  }\n\n  return value;\n}\n", "import type {\n  CheckResourceRequest,\n  CheckResourcesRequest,\n  CheckResourcesResponse,\n  CheckResourcesResult,\n  ClientWithPrincipal,\n  IsAllowedRequest,\n  RequestOptions,\n} from \"@cerbos/core\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useDeepCompareMemoize } from \"use-deep-compare-effect\";\n\nimport { useCerbos } from \"./use-cerbos\";\n\n/**\n * The result of calling an async method on a client.\n *\n * @public\n */\nexport type AsyncResult<T> =\n  | { isLoading: true; data: undefined; error: undefined }\n  | { isLoading: false; data: T; error: undefined }\n  | { isLoading: false; data: undefined; error: Error };\n\ntype Methods = \"checkResource\" | \"checkResources\" | \"isAllowed\";\n\ntype Result<Method extends Methods> = Awaited<\n  ReturnType<ClientWithPrincipal[Method]>\n>;\n\nfunction useCerbosRequest<Method extends Methods>(\n  method: Method,\n  request: Parameters<ClientWithPrincipal[Method]>[0],\n  options?: Omit<RequestOptions, \"signal\">,\n): AsyncResult<Result<Method>> {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState<Result<Method>>();\n  const [error, setError] = useState<Error>();\n\n  const client = useCerbos();\n  const requestMemo = useDeepCompareMemoize(request);\n  const optionsMemo = useDeepCompareMemoize(options);\n\n  const load = useCallback<(signal: AbortSignal) => Promise<Result<Method>>>(\n    async (signal: AbortSignal): Promise<Result<Method>> =>\n      // @ts-expect-error -- https://github.com/microsoft/TypeScript/issues/30581\n      await client[method](requestMemo, {\n        ...optionsMemo,\n        signal,\n      }),\n    [client, method, optionsMemo, requestMemo],\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    setData(undefined);\n    setError(undefined);\n\n    const abortController = new AbortController();\n\n    load(abortController.signal)\n      .then((data) => {\n        if (!abortController.signal.aborted) {\n          setIsLoading(false);\n          setData(data);\n          setError(undefined);\n        }\n      })\n      .catch((error: unknown) => {\n        if (!abortController.signal.aborted) {\n          setIsLoading(false);\n          setData(undefined);\n          setError(\n            error instanceof Error\n              ? error\n              : new Error(\"An unexpected error occurred\", { cause: error }),\n          );\n        }\n      });\n\n    return () => {\n      abortController.abort();\n    };\n  }, [load]);\n\n  return { isLoading, data, error } as AsyncResult<Result<Method>>;\n}\n\n/**\n * Check the principal's permissions on a resource.\n *\n * @example\n * ```typescript\n * import { useCheckResource } from \"@cerbos/react\";\n *\n * function SomeComponent() {\n *   const check = useCheckResource({\n *     resource: {\n *       kind: \"document\",\n *       id: \"1\",\n *       attr: { owner: \"user@example.com\" },\n *     },\n *     actions: [\"view\", \"edit\"],\n *   });\n *\n *   if (check.isLoading) {\n *     // show spinner\n *     return \"Loading...\";\n *   }\n *\n *   if (check.error) {\n *     // handle error\n *     return \"Error...\";\n *   }\n *\n *   return (\n *     <div>\n *       {check.data.allAllowed() && <button>a button</button>}\n *       {check.data.isAllowed(\"view\") && <button>another button</button>}\n *     </div>\n *   );\n * }\n * ```\n * @public\n */\nexport function useCheckResource(\n  request: Omit<CheckResourceRequest, \"principal\">,\n  options?: Omit<RequestOptions, \"signal\">,\n): AsyncResult<CheckResourcesResult> {\n  return useCerbosRequest(\"checkResource\", request, options);\n}\n\n/**\n * Check the principal's permissions on a set of resources.\n *\n * @example\n * ```typescript\n * import { useCheckResources } from \"@cerbos/react\";\n *\n * function SomeComponent() {\n *   const check = useCheckResources({\n *     resources: [\n *       {\n *         resource: {\n *           kind: \"document\",\n *           id: \"1\",\n *           attr: { owner: \"user@example.com\" },\n *         },\n *         actions: [\"view\", \"edit\"],\n *       },\n *       {\n *         resource: {\n *           kind: \"document\",\n *           id: \"2\",\n *           attr: { owner: \"another-user@example.com\" },\n *         },\n *         actions: [\"view\", \"edit\"],\n *       },\n *     ],\n *   });\n *\n *   if (check.isLoading) {\n *     // show spinner\n *     return \"Loading...\";\n *   }\n *\n *   if (check.error) {\n *     // handle error\n *     return \"Error...\";\n *   }\n *\n *   return (\n *     <div>\n *       {check.data.allAllowed({\n *         kind: \"document\",\n *         id: \"1\",\n *       }) && <button>a button document 1</button>}\n *       {check.data.allAllowed({\n *         kind: \"document\",\n *         id: \"2\",\n *       }) && <button>a button document 2</button>}\n *       {check.data.isAllowed({\n *         resource: { kind: \"document\", id: \"1\" },\n *         action: \"edit\",\n *       }) && <button>another button for document 1</button>}\n *       {check.data.isAllowed({\n *         resource: { kind: \"document\", id: \"2\" },\n *         action: \"edit\",\n *       }) && <button>another button for document 2</button>}\n *     </div>\n *   );\n * }\n * ```\n * @public\n */\nexport function useCheckResources(\n  request: Omit<CheckResourcesRequest, \"principal\">,\n  options?: Omit<RequestOptions, \"signal\">,\n): AsyncResult<CheckResourcesResponse> {\n  return useCerbosRequest(\"checkResources\", request, options);\n}\n\n/**\n * Check if the principal is allowed to perform an action on a resource.\n *\n * @example\n * ```typescript\n * import { useIsAllowed } from \"@cerbos/react\";\n *\n * function SomeComponent() {\n *   const check = useIsAllowed({\n *     resource: {\n *       kind: \"document\",\n *       id: \"1\",\n *       attr: { owner: \"user@example.com\" },\n *     },\n *     action: \"view\",\n *   });\n *\n *   if (check.isLoading) {\n *     // show spinner\n *     return \"Loading...\";\n *   }\n *\n *   if (check.error) {\n *     // handle error\n *     return \"Error...\";\n *   }\n *\n *   return <div>{check.data && <button>a button document 1</button>}</div>;\n * }\n * ```\n * @public\n */\nexport function useIsAllowed(\n  request: Omit<IsAllowedRequest, \"principal\">,\n  options?: Omit<RequestOptions, \"signal\">,\n): AsyncResult<boolean> {\n  return useCerbosRequest(\"isAllowed\", request, options);\n}\n", "/**\n * A collection of React hooks for interacting with Cerbos policy decision points.\n *\n * @packageDocumentation\n */\nexport { type CerbosProviderProps, CerbosProvider } from \"./cerbos-provider\";\nexport { useCerbos } from \"./use-cerbos\";\nexport {\n  type AsyncResult,\n  useCheckResource,\n  useCheckResources,\n  useIsAllowed,\n} from \"./use-cerbos-request\";\n"],
  "mappings": ";;;;;;;;;;;;;;;AAEA,SAAS,KAAK,MAAM,KAAK,KAAK;AAC7B,OAAK,OAAO,KAAK,KAAK,GAAG;AACxB,QAAI,OAAO,KAAK,GAAG;AAAG,aAAO;AAAA,EAC9B;AACD;AAEO,SAAS,OAAO,KAAK,KAAK;AAChC,MAAI,MAAM,KAAK;AACf,MAAI,QAAQ;AAAK,WAAO;AAExB,MAAI,OAAO,QAAQ,OAAK,IAAI,iBAAiB,IAAI,aAAa;AAC7D,QAAI,SAAS;AAAM,aAAO,IAAI,QAAQ,MAAM,IAAI,QAAQ;AACxD,QAAI,SAAS;AAAQ,aAAO,IAAI,SAAS,MAAM,IAAI,SAAS;AAE5D,QAAI,SAAS,OAAO;AACnB,WAAK,MAAI,IAAI,YAAY,IAAI,QAAQ;AACpC,eAAO,SAAS,OAAO,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC;AAAE;AAAA,MAC5C;AACA,aAAO,QAAQ;AAAA,IAChB;AAEA,QAAI,SAAS,KAAK;AACjB,UAAI,IAAI,SAAS,IAAI,MAAM;AAC1B,eAAO;AAAA,MACR;AACA,WAAK,OAAO,KAAK;AAChB,cAAM;AACN,YAAI,OAAO,OAAO,QAAQ,UAAU;AACnC,gBAAM,KAAK,KAAK,GAAG;AACnB,cAAI,CAAC;AAAK,mBAAO;AAAA,QAClB;AACA,YAAI,CAAC,IAAI,IAAI,GAAG;AAAG,iBAAO;AAAA,MAC3B;AACA,aAAO;AAAA,IACR;AAEA,QAAI,SAAS,KAAK;AACjB,UAAI,IAAI,SAAS,IAAI,MAAM;AAC1B,eAAO;AAAA,MACR;AACA,WAAK,OAAO,KAAK;AAChB,cAAM,IAAI,CAAC;AACX,YAAI,OAAO,OAAO,QAAQ,UAAU;AACnC,gBAAM,KAAK,KAAK,GAAG;AACnB,cAAI,CAAC;AAAK,mBAAO;AAAA,QAClB;AACA,YAAI,CAAC,OAAO,IAAI,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,GAAG;AAClC,iBAAO;AAAA,QACR;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAEA,QAAI,SAAS,aAAa;AACzB,YAAM,IAAI,WAAW,GAAG;AACxB,YAAM,IAAI,WAAW,GAAG;AAAA,IACzB,WAAW,SAAS,UAAU;AAC7B,WAAK,MAAI,IAAI,gBAAgB,IAAI,YAAY;AAC5C,eAAO,SAAS,IAAI,QAAQ,GAAG,MAAM,IAAI,QAAQ,GAAG;AAAE;AAAA,MACvD;AACA,aAAO,QAAQ;AAAA,IAChB;AAEA,QAAI,YAAY,OAAO,GAAG,GAAG;AAC5B,WAAK,MAAI,IAAI,gBAAgB,IAAI,YAAY;AAC5C,eAAO,SAAS,IAAI,GAAG,MAAM,IAAI,GAAG;AAAE;AAAA,MACvC;AACA,aAAO,QAAQ;AAAA,IAChB;AAEA,QAAI,CAAC,QAAQ,OAAO,QAAQ,UAAU;AACrC,YAAM;AACN,WAAK,QAAQ,KAAK;AACjB,YAAI,IAAI,KAAK,KAAK,IAAI,KAAK,EAAE,OAAO,CAAC,IAAI,KAAK,KAAK,IAAI;AAAG,iBAAO;AACjE,YAAI,EAAE,QAAQ,QAAQ,CAAC,OAAO,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC;AAAG,iBAAO;AAAA,MAC7D;AACA,aAAO,OAAO,KAAK,GAAG,EAAE,WAAW;AAAA,IACpC;AAAA,EACD;AAEA,SAAO,QAAQ,OAAO,QAAQ;AAC/B;AAnFA,IAAI;AAAJ;AAAA;AAAA,IAAI,MAAM,OAAO,UAAU;AAAA;AAAA;;;ACA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,SAAS,UAAU,MAAM;AACvB,MAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ;AACzB,UAAM,IAAI,MAAM,4FAA4F;AAAA,EAC9G;AAEA,MAAI,KAAK,MAAM,WAAW,GAAG;AAC3B,UAAM,IAAI,MAAM,uHAAuH;AAAA,EACzI;AACF;AAEA,SAAS,YAAY,KAAK;AACxB,SAAO,OAAO,QAAQ,SAAS,KAAK,OAAO,GAAG;AAChD;AAOA,SAAS,sBAAsB,OAAO;AACpC,MAAI,MAAY,aAAO,KAAK;AAC5B,MAAI,YAAkB,aAAO,CAAC;AAE9B,MAAI,CAAC,OAAO,OAAO,IAAI,OAAO,GAAG;AAC/B,QAAI,UAAU;AACd,cAAU,WAAW;AAAA,EACvB;AAGA,SAAa,cAAQ,WAAY;AAC/B,WAAO,IAAI;AAAA,EACb,GAAG,CAAC,UAAU,OAAO,CAAC;AACxB;AAEA,SAAS,qBAAqB,UAAU,cAAc;AACpD,MAAI,MAAuC;AACzC,cAAU,YAAY;AAAA,EACxB;AAGA,SAAa,gBAAU,UAAU,sBAAsB,YAAY,CAAC;AACtE;AAEA,SAAS,4BAA4B,UAAU,cAAc;AAE3D,SAAa,gBAAU,UAAU,sBAAsB,YAAY,CAAC;AACtE;AAjDA;AAAA;AAAA;AAAA,YAAuB;AACvB;AAAA;AAAA;;;;;;;;;ACMA,QAAA,UAAA;AACA,QAAA,4BAAA;AAEa,YAAA,iBAAgB,GAAA,QAAA,eAC3B,MAAS;AAsFX,aAAgB,eAAe,EAC7B,UACA,QACA,WACA,QAAO,GACa;AACpB,YAAM,iBAAgB,GAAA,0BAAA,uBAAsB,SAAS;AACrD,YAAM,eAAc,GAAA,0BAAA,uBAAsB,OAAO;AAEjD,YAAM,SAAQ,GAAA,QAAA,SACZ,MAAM,OAAO,cAAc,eAAe,WAAW,GACrD,CAAC,QAAQ,eAAe,WAAW,CAAC;AAGtC,cACE,GAAA,cAAA,KAAC,QAAA,cAAc,UAAQ,EAAC,OAAY,SAAW,CAAA;IAEnD;AAjBA,YAAA,iBAAA;;;;;;;;;;AChGA,QAAA,UAAA;AAEA,QAAA,oBAAA;AAoDA,aAAgB,YAAS;AACvB,YAAM,SAAQ,GAAA,QAAA,YAAW,kBAAA,aAAa;AAEtC,UAAI,CAAC,OAAO;AACV,cAAM,IAAI,MAAM,0BAA0B;MAC5C;AAEA,aAAO;IACT;AARA,YAAA,YAAA;;;;;;;;;;AC9CA,QAAA,UAAA;AACA,QAAA,4BAAA;AAEA,QAAA,eAAA;AAkBA,aAAS,iBACP,QACA,SACA,SAAwC;AAExC,YAAM,CAAC,WAAW,YAAY,KAAI,GAAA,QAAA,UAAS,IAAI;AAC/C,YAAM,CAAC,MAAM,OAAO,KAAI,GAAA,QAAA,UAAQ;AAChC,YAAM,CAAC,OAAO,QAAQ,KAAI,GAAA,QAAA,UAAQ;AAElC,YAAM,UAAS,GAAA,aAAA,WAAS;AACxB,YAAM,eAAc,GAAA,0BAAA,uBAAsB,OAAO;AACjD,YAAM,eAAc,GAAA,0BAAA,uBAAsB,OAAO;AAEjD,YAAM,QAAO,GAAA,QAAA,aACX,OAAO;;QAEL,MAAM,OAAO,MAAM,EAAE,aAAa;UAChC,GAAG;UACH;SACD;SACH,CAAC,QAAQ,QAAQ,aAAa,WAAW,CAAC;AAG5C,OAAA,GAAA,QAAA,WAAU,MAAK;AACb,qBAAa,IAAI;AACjB,gBAAQ,MAAS;AACjB,iBAAS,MAAS;AAElB,cAAM,kBAAkB,IAAI,gBAAe;AAE3C,aAAK,gBAAgB,MAAM,EACxB,KAAK,CAACA,UAAQ;AACb,cAAI,CAAC,gBAAgB,OAAO,SAAS;AACnC,yBAAa,KAAK;AAClB,oBAAQA,KAAI;AACZ,qBAAS,MAAS;UACpB;QACF,CAAC,EACA,MAAM,CAACC,WAAkB;AACxB,cAAI,CAAC,gBAAgB,OAAO,SAAS;AACnC,yBAAa,KAAK;AAClB,oBAAQ,MAAS;AACjB,qBACEA,kBAAiB,QACbA,SACA,IAAI,MAAM,gCAAgC,EAAE,OAAOA,OAAK,CAAE,CAAC;UAEnE;QACF,CAAC;AAEH,eAAO,MAAK;AACV,0BAAgB,MAAK;QACvB;MACF,GAAG,CAAC,IAAI,CAAC;AAET,aAAO,EAAE,WAAW,MAAM,MAAK;IACjC;AAuCA,aAAgB,iBACd,SACA,SAAwC;AAExC,aAAO,iBAAiB,iBAAiB,SAAS,OAAO;IAC3D;AALA,YAAA,mBAAA;AAsEA,aAAgB,kBACd,SACA,SAAwC;AAExC,aAAO,iBAAiB,kBAAkB,SAAS,OAAO;IAC5D;AALA,YAAA,oBAAA;AAuCA,aAAgB,aACd,SACA,SAAwC;AAExC,aAAO,iBAAiB,aAAa,SAAS,OAAO;IACvD;AALA,YAAA,eAAA;;;;;;;;;ACrOA,QAAA,oBAAA;AAAmC,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,kBAAA;IAAc,EAAA,CAAA;AACjD,QAAA,eAAA;AAAS,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,aAAA;IAAS,EAAA,CAAA;AAClB,QAAA,uBAAA;AAEE,WAAA,eAAA,SAAA,oBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,qBAAA;IAAgB,EAAA,CAAA;AAChB,WAAA,eAAA,SAAA,qBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,qBAAA;IAAiB,EAAA,CAAA;AACjB,WAAA,eAAA,SAAA,gBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,qBAAA;IAAY,EAAA,CAAA;;;",
  "names": ["data", "error"]
}
