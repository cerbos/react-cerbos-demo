"use strict";
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Constraint = exports.FieldConstraints = exports.protobufPackage = void 0;
exports.protobufPackage = "buf.validate.priv";
exports.FieldConstraints = {
    fromJSON(object) {
        return {
            cel: globalThis.Array.isArray(object?.cel)
                ? object.cel.map((e) => exports.Constraint.fromJSON(e))
                : [],
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.cel?.length) {
            obj.cel = message.cel.map((e) => exports.Constraint.toJSON(e));
        }
        return obj;
    },
};
exports.Constraint = {
    fromJSON(object) {
        return {
            id: isSet(object.id) ? globalThis.String(object.id) : "",
            message: isSet(object.message) ? globalThis.String(object.message) : "",
            expression: isSet(object.expression)
                ? globalThis.String(object.expression)
                : "",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.id !== "") {
            obj.id = message.id;
        }
        if (message.message !== "") {
            obj.message = message.message;
        }
        if (message.expression !== "") {
            obj.expression = message.expression;
        }
        return obj;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=private.js.map